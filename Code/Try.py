#!/usr/bin/python

"""Fits an exponential decay function to a data set"""

___author__ = "Emma Fox (e.fox16@imperial.ac.uk)"
__version__ = "0.0.1"

########################################################################
# IMPORTS                                                              #
########################################################################
import sys
import os
import argparse
import glob
import numpy as np
from lmfit import minimize, Minimizer, Parameters, Parameter, report_fit, fit_report
import csv
import rpy2.robjects as robjects
import subprocess

########################################################################
# TAGS FOR OPTIONS                                                     #
########################################################################
parser = argparse.ArgumentParser(description="Fit an exponential curve (with the option to generate plots of the data and curves) to files generated by ngsLD")
Required_Arguments=parser.add_argument_group("arguments required to run command")
Required_Arguments.add_argument("--input_type", choices=['FILE','FOLDER'],
					help="Specify the input: FILE or FOLDER",
					type=str, default="stdout", required="True")
Required_Arguments.add_argument("--input_name", type=str, 
					help="Specify the path to the FILE or FOLDER",
					default="stdout", required="True")
Required_Arguments.add_argument("--data_type", type=str, choices=['r2Pear','D',
					'DPrime','r2GLS'],
					help="Choose which measure to plot: r2Pear, D, DPrime, or r2GLS",
					default="stdout", required="True")
parser.add_argument("--plot", 
					help="create a graph of each input file with the fit 	curve overlaid", action="store_true")
args = parser.parse_args()

# Print help if no arguments specified and quit run
if len(sys.argv) == 1:
    parser.print_help()
    sys.exit(1)

# Give some output to describe options used
print "\nData type chosen: {}".format(args.data_type)
print "Path to {} to be analysed: {}".format(args.input_type, args.input_name)

Rpath=sys.path[0]
Rfile="Fit_Exp_Plot.R"
Rrun = "%s/%s" % (Rpath,Rfile)

print Rrun
